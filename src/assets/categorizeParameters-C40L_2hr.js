const N=(l,d)=>l.push(d),r=l=>({ParameterName:l.ParamName,Value:l._Value,FuncType:l.FuncType}),W=l=>{const d=[];return l==null||l.forEach(e=>{if(e){if(["Analog","Discrete"].includes(e.protocolType))return d.push({type:e.protocolType,...r(e)});if(["Serial","UserProtocol","TCP_UDP"].includes(e.protocolType)){const t=e.MessageName||e.MsgName;let s=d.find(o=>o.type===e.protocolType&&o.MessageName===t);s||(s={type:e.protocolType,MessageName:t,Parameters:[]},N(d,s)),N(s.Parameters,r(e))}else if(e.protocolType==="A429"){let t=d.find(o=>o.type===e.protocolType&&o.BusName===e.BusName);t||(t={type:e.protocolType,BusName:e.BusName,Words:[]},N(d,t));let s=t.Words.find(o=>o.WordName===e.WordName);s||(s={WordName:e.WordName,Parameters:[]},N(t.Words,s)),N(s.Parameters,r(e))}else if(e.protocolType==="A825"){let t=d.find(o=>o.type===e.protocolType&&o.BusName===e.BusName);t||(t={type:e.protocolType,BusName:e.BusName,Messages:[]},N(d,t));let s=t.Messages.find(o=>o.MessageName===e.MsgName);if(s||(s={MessageName:e.MsgName,Parameters:[],Words:[]},N(t.Messages,s)),e.WordName){let o=s.Words.find(c=>c.WordName===e.WordName);o||(o={WordName:e.WordName,Parameters:[]},N(s.Words,o)),N(o.Parameters,r(e))}else N(s.Parameters,r(e))}else if(e.protocolType==="A664"){let t=d.find(s=>s.type===e.protocolType&&s.MessageName===e.MsgName);if(t||(t={type:e.protocolType,MessageName:e.MsgName,Datasets:[],Blocks:[]},N(d,t)),e.BlockName){let s=t.Blocks.find(c=>c.BlockName===e.BlockName);s||(s={BlockName:e.BlockName,Words:[]},N(t.Blocks,s));let o=s.Words.find(c=>c.WordName===e.WordName);o||(o={WordName:e.WordName,Parameters:[]},N(s.Words,o)),N(o.Parameters,r(e))}else{let s=t.Datasets.find(o=>o.DatasetName===e.DataSetName);if(s||(s={DatasetName:e.DataSetName,Words:[],Parameters:[]},N(t.Datasets,s)),e.WordName){let o=s.Words.find(c=>c.WordName===e.WordName);o||(o={WordName:e.WordName,Parameters:[]},N(s.Words,o)),N(o.Parameters,r(e))}else N(s.Parameters,r(e))}}}}),d};export{W as c};
